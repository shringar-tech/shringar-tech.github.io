{"version":3,"sources":["elements/FilterSort.js","components/CategoryPage.js"],"names":["FilterSort","_ref","filters","activeFilters","onFilterChange","sortBy","onSortChange","isFilterModalOpen","setIsFilterModalOpen","useState","getActiveFilterCount","Object","values","reduce","count","filterArray","length","_jsxs","_Fragment","children","className","onClick","_jsx","htmlFor","id","value","onChange","e","target","label","map","option","stopPropagation","filter","options","_activeFilters$filter","type","checked","key","includes","keys","forEach","_activeFilters$key","CategoryPage","category","items","setItems","loading","setLoading","setActiveFilters","setSortBy","useEffect","fetch","cat","getDataFile","then","response","json","data","catch","error","console","filterOptions","useMemo","getFilterOptions","filteredAndSortedItems","filtered","filterItems","sortItems","replace","l","toUpperCase","handleFilterChange","filterKey","prev","current","v","item","Link","to","ProductCard"],"mappings":"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","file":"static/js/3.4e18d3d6.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport './FilterSort.css';\n\nconst FilterSort = ({ \n  filters, \n  activeFilters, \n  onFilterChange, \n  sortBy, \n  onSortChange \n}) => {\n  const [isFilterModalOpen, setIsFilterModalOpen] = useState(false);\n  \n  const sortOptions = [\n    { value: 'default', label: 'Default' },\n    { value: 'price-low', label: 'Price: Low to High' },\n    { value: 'price-high', label: 'Price: High to Low' },\n    { value: 'name-asc', label: 'Name: A to Z' },\n    { value: 'name-desc', label: 'Name: Z to A' }\n  ];\n\n  const getActiveFilterCount = () => {\n    return Object.values(activeFilters).reduce((count, filterArray) => \n      count + (filterArray?.length || 0), 0\n    );\n  };\n\n  return (\n    <>\n      <div className=\"filter-sort-container\">\n        <button \n          className=\"filter-button\"\n          onClick={() => setIsFilterModalOpen(true)}\n        >\n          <span>üîç</span>\n          Filter\n          {getActiveFilterCount() > 0 && (\n            <span className=\"filter-count\">{getActiveFilterCount()}</span>\n          )}\n        </button>\n        \n        <div className=\"sort-section\">\n          <label htmlFor=\"sort-select\">Sort:</label>\n          <select \n            id=\"sort-select\"\n            value={sortBy} \n            onChange={(e) => onSortChange(e.target.value)}\n            className=\"sort-dropdown\"\n          >\n            {sortOptions.map(option => (\n              <option key={option.value} value={option.value}>\n                {option.label}\n              </option>\n            ))}\n          </select>\n        </div>\n      </div>\n\n      {isFilterModalOpen && (\n        <div className=\"filter-modal-overlay\" onClick={() => setIsFilterModalOpen(false)}>\n          <div className=\"filter-modal\" onClick={(e) => e.stopPropagation()}>\n            <div className=\"filter-modal-header\">\n              <h3>Filter Products</h3>\n              <button \n                className=\"close-button\"\n                onClick={() => setIsFilterModalOpen(false)}\n              >\n                √ó\n              </button>\n            </div>\n            \n            <div className=\"filter-modal-content\">\n              {filters.map(filter => (\n                <div key={filter.key} className=\"filter-group\">\n                  <h4>{filter.label}</h4>\n                  {filter.options.map(option => (\n                    <label key={option.value} className=\"filter-option\">\n                      <input\n                        type=\"checkbox\"\n                        checked={activeFilters[filter.key]?.includes(option.value) || false}\n                        onChange={(e) => onFilterChange(filter.key, option.value, e.target.checked)}\n                      />\n                      <span>{option.label}</span>\n                    </label>\n                  ))}\n                </div>\n              ))}\n            </div>\n            \n            <div className=\"filter-modal-footer\">\n              <button \n                className=\"clear-filters-btn\"\n                onClick={() => {\n                  Object.keys(activeFilters).forEach(key => {\n                    activeFilters[key]?.forEach(value => {\n                      onFilterChange(key, value, false);\n                    });\n                  });\n                }}\n              >\n                Clear All\n              </button>\n              <button \n                className=\"apply-filters-btn\"\n                onClick={() => setIsFilterModalOpen(false)}\n              >\n                Apply Filters\n              </button>\n            </div>\n          </div>\n        </div>\n      )}\n    </>\n  );\n};\n\nexport default FilterSort;","import React, { useEffect, useState, useMemo } from 'react';\nimport { Link } from 'react-router-dom';\nimport ProductCard from '../elements/ProductCard';\nimport FilterSort from '../elements/FilterSort';\nimport { filterItems, sortItems, getFilterOptions } from '../utils/helpers';\nimport './CategoryPage.css';\n\nfunction CategoryPage({ category }) {\n  const [items, setItems] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [activeFilters, setActiveFilters] = useState({});\n  const [sortBy, setSortBy] = useState('default');\n\n  useEffect(() => {\n    setLoading(true);\n    \n    // Map new categories to existing data files for now\n    const getDataFile = (cat) => {\n      switch(cat) {\n        case 'new-arrivals':\n          return 'latestcollection.json';\n        case 'best-sellers':\n          return 'sarees.json'; // Using sarees as best sellers for now\n        case 'shop-all':\n          return 'sarees.json'; // Using sarees for shop all for now\n        default:\n          return `${cat}.json`;\n      }\n    };\n\n    fetch(`/data/${getDataFile(category)}`)\n      .then(response => response.json())\n      .then(data => {\n        setItems(data);\n        setLoading(false);\n      })\n      .catch(error => {\n        console.error('Error fetching data:', error);\n        setLoading(false);\n      });\n  }, [category]);\n\n  const filterOptions = useMemo(() => getFilterOptions(items), [items]);\n  \n  const filteredAndSortedItems = useMemo(() => {\n    const filtered = filterItems(items, activeFilters);\n    return sortItems(filtered, sortBy);\n  }, [items, activeFilters, sortBy]);\n\n  const handleFilterChange = (filterKey, value, checked) => {\n    setActiveFilters(prev => {\n      const current = prev[filterKey] || [];\n      if (checked) {\n        return { ...prev, [filterKey]: [...current, value] };\n      } else {\n        return { ...prev, [filterKey]: current.filter(v => v !== value) };\n      }\n    });\n  };\n\n  if (loading) {\n    return <div className=\"loading\">Loading...</div>;\n  }\n\n  return (\n    <section className=\"category-section\">\n      <h2>{category.replace('-', ' ').replace(/\\b\\w/g, l => l.toUpperCase())}</h2>\n      \n      {items.length > 0 && (\n        <FilterSort\n          filters={filterOptions}\n          activeFilters={activeFilters}\n          onFilterChange={handleFilterChange}\n          sortBy={sortBy}\n          onSortChange={setSortBy}\n        />\n      )}\n      \n      <div className=\"category-container\">\n        {filteredAndSortedItems.map(item => (\n          <Link to={`/${category}/${item.id}`} className=\"category-link\" key={item.id}>\n            <ProductCard item={item} category={category} />\n          </Link>\n        ))}\n      </div>\n      \n      {filteredAndSortedItems.length === 0 && items.length > 0 && (\n        <div className=\"no-results\">\n          <p>No items match your current filters.</p>\n        </div>\n      )}\n    </section>\n  );\n}\n\nexport default CategoryPage;"],"sourceRoot":""}