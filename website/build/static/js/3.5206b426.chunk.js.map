{"version":3,"sources":["components/CategoryPage.js"],"names":["CategoryPage","_ref","category","items","setItems","useState","loading","setLoading","useEffect","fetch","cat","getDataFile","then","response","json","data","catch","error","console","_jsx","className","children","_jsxs","replace","l","toUpperCase","map","item","Link","to","id","ProductCard"],"mappings":"8JAAA,gDAwDeA,UAnDf,SAAqBC,GAAgB,IAAf,SAAEC,GAAUD,EAChC,MAAOE,EAAOC,GAAYC,mBAAS,KAC5BC,EAASC,GAAcF,oBAAS,GA+BvC,OA7BAG,qBAAU,KACRD,GAAW,GAgBXE,MAAM,SAbeC,KACnB,OAAOA,GACL,IAAK,eACH,MAAO,wBACT,IAAK,eAEL,IAAK,WACH,MAAO,cACT,QACE,MAAO,GAAGA,SACd,EAGaC,CAAYT,MACxBU,MAAKC,GAAYA,EAASC,SAC1BF,MAAKG,IACJX,EAASW,GACTR,GAAW,EAAM,IAElBS,OAAMC,IACLC,QAAQD,MAAM,uBAAwBA,GACtCV,GAAW,EAAM,GACjB,GACH,CAACL,IAEAI,EACKa,cAAA,OAAKC,UAAU,UAASC,SAAC,eAIhCC,eAAA,WAASF,UAAU,mBAAkBC,SAAA,CACnCF,cAAA,MAAAE,SAAKnB,EAASqB,QAAQ,IAAK,KAAKA,QAAQ,SAASC,GAAKA,EAAEC,kBACxDN,cAAA,OAAKC,UAAU,qBAAoBC,SAChClB,EAAMuB,KAAIC,GACTR,cAACS,IAAI,CAACC,GAAI,IAAI3B,KAAYyB,EAAKG,KAAMV,UAAU,gBAAeC,SAC5DF,cAACY,IAAW,CAACJ,KAAMA,EAAMzB,SAAUA,KAD+ByB,EAAKG,UAOnF,C","file":"static/js/3.5206b426.chunk.js","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport ProductCard from '../elements/ProductCard';\nimport './CategoryPage.css';\n\nfunction CategoryPage({ category }) {\n  const [items, setItems] = useState([]);\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    setLoading(true);\n    \n    // Map new categories to existing data files for now\n    const getDataFile = (cat) => {\n      switch(cat) {\n        case 'new-arrivals':\n          return 'latestcollection.json';\n        case 'best-sellers':\n          return 'sarees.json'; // Using sarees as best sellers for now\n        case 'shop-all':\n          return 'sarees.json'; // Using sarees for shop all for now\n        default:\n          return `${cat}.json`;\n      }\n    };\n\n    fetch(`/data/${getDataFile(category)}`)\n      .then(response => response.json())\n      .then(data => {\n        setItems(data);\n        setLoading(false);\n      })\n      .catch(error => {\n        console.error('Error fetching data:', error);\n        setLoading(false);\n      });\n  }, [category]);\n\n  if (loading) {\n    return <div className=\"loading\">Loading...</div>;\n  }\n\n  return (\n    <section className=\"category-section\">\n      <h2>{category.replace('-', ' ').replace(/\\b\\w/g, l => l.toUpperCase())}</h2>\n      <div className=\"category-container\">\n        {items.map(item => (\n          <Link to={`/${category}/${item.id}`} className=\"category-link\" key={item.id}>\n            <ProductCard item={item} category={category} />\n          </Link>\n        ))}\n      </div>\n    </section>\n  );\n}\n\nexport default CategoryPage;"],"sourceRoot":""}